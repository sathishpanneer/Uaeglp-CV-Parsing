// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Uaeglp.Models
{
    public partial class Client
    {
        public Client()
        {
            ClientClaims = new HashSet<ClientClaim>();
            ClientCorsOrigins = new HashSet<ClientCorsOrigin>();
            ClientCustomGrantTypes = new HashSet<ClientCustomGrantType>();
            ClientIdPrestrictions = new HashSet<ClientIdPrestriction>();
            ClientPostLogoutRedirectUris = new HashSet<ClientPostLogoutRedirectUri>();
            ClientRedirectUris = new HashSet<ClientRedirectUri>();
            ClientScopes = new HashSet<ClientScope>();
            ClientSecrets = new HashSet<ClientSecret>();
        }

        [Key]
        public int Id { get; set; }
        public bool Enabled { get; set; }
        [Required]
        [StringLength(200)]
        public string ClientId { get; set; }
        [Required]
        [StringLength(200)]
        public string ClientName { get; set; }
        [StringLength(2000)]
        public string ClientUri { get; set; }
        public string LogoUri { get; set; }
        public bool RequireConsent { get; set; }
        public bool AllowRememberConsent { get; set; }
        public bool AllowAccessTokensViaBrowser { get; set; }
        public int Flow { get; set; }
        public bool AllowClientCredentialsOnly { get; set; }
        public string LogoutUri { get; set; }
        public bool LogoutSessionRequired { get; set; }
        public bool RequireSignOutPrompt { get; set; }
        public bool AllowAccessToAllScopes { get; set; }
        public int IdentityTokenLifetime { get; set; }
        public int AccessTokenLifetime { get; set; }
        public int AuthorizationCodeLifetime { get; set; }
        public int AbsoluteRefreshTokenLifetime { get; set; }
        public int SlidingRefreshTokenLifetime { get; set; }
        public int RefreshTokenUsage { get; set; }
        public bool UpdateAccessTokenOnRefresh { get; set; }
        public int RefreshTokenExpiration { get; set; }
        public int AccessTokenType { get; set; }
        public bool EnableLocalLogin { get; set; }
        public bool IncludeJwtId { get; set; }
        public bool AlwaysSendClientClaims { get; set; }
        public bool PrefixClientClaims { get; set; }
        public bool AllowAccessToAllGrantTypes { get; set; }

        [InverseProperty(nameof(ClientClaim.Client))]
        public virtual ICollection<ClientClaim> ClientClaims { get; set; }
        [InverseProperty(nameof(ClientCorsOrigin.Client))]
        public virtual ICollection<ClientCorsOrigin> ClientCorsOrigins { get; set; }
        [InverseProperty(nameof(ClientCustomGrantType.Client))]
        public virtual ICollection<ClientCustomGrantType> ClientCustomGrantTypes { get; set; }
        [InverseProperty(nameof(ClientIdPrestriction.Client))]
        public virtual ICollection<ClientIdPrestriction> ClientIdPrestrictions { get; set; }
        [InverseProperty(nameof(ClientPostLogoutRedirectUri.Client))]
        public virtual ICollection<ClientPostLogoutRedirectUri> ClientPostLogoutRedirectUris { get; set; }
        [InverseProperty(nameof(ClientRedirectUri.Client))]
        public virtual ICollection<ClientRedirectUri> ClientRedirectUris { get; set; }
        [InverseProperty(nameof(ClientScope.Client))]
        public virtual ICollection<ClientScope> ClientScopes { get; set; }
        [InverseProperty(nameof(ClientSecret.Client))]
        public virtual ICollection<ClientSecret> ClientSecrets { get; set; }
    }
}