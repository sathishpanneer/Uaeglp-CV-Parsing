// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Uaeglp.Models
{
    [Table("Meetup")]
    public partial class Meetup
    {
        public Meetup()
        {
            Agenda = new HashSet<Agendum>();
            ProfileMeetups = new HashSet<ProfileMeetup>();
        }

        [Key]
        [Column("ID")]
        public int Id { get; set; }
        [StringLength(50)]
        public string Title { get; set; }
        [StringLength(500)]
        public string Description { get; set; }
        [StringLength(50)]
        public string Longitude { get; set; }
        [Column("GroupID")]
        public int GroupId { get; set; }
        
        [StringLength(50)]
        public string Latitude { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime Date { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime Created { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime Modified { get; set; }
        [Required]
        [StringLength(256)]
        public string CreatedBy { get; set; }
        [Required]
        [StringLength(256)]
        public string ModifiedBy { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime StartTime { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime EndTime { get; set; }
        public bool IsPublished { get; set; }
        [StringLength(300)]
        public string RejectionComment { get; set; }
        [StringLength(500)]
        public string MapText { get; set; }
        [Column("StatusItemID")]
        public int StatusItemId { get; set; }
        [Column("OwnerID")]
        public int OwnerId { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? PublishedDate { get; set; }
        public int? MeetupPictureID { get; set; }

        [ForeignKey(nameof(GroupId))]
        [InverseProperty("Meetups")]
        public virtual Group Group { get; set; }
        [ForeignKey(nameof(OwnerId))]
        [InverseProperty(nameof(User.Meetups))]
        public virtual User Owner { get; set; }
        [ForeignKey(nameof(StatusItemId))]
        [InverseProperty(nameof(LookupItem.Meetups))]
        public virtual LookupItem StatusItem { get; set; }
        [InverseProperty(nameof(Agendum.Meetup))]
        public virtual ICollection<Agendum> Agenda { get; set; }
        [InverseProperty(nameof(ProfileMeetup.Meetup))]
        public virtual ICollection<ProfileMeetup> ProfileMeetups { get; set; }
    }
}