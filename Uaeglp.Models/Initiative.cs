// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Uaeglp.Models
{
    [Table("Initiative")]
    public partial class Initiative
    {
        public Initiative()
        {
            BatchInitiatives = new HashSet<BatchInitiative>();
            InitiativeProfiles = new HashSet<InitiativeProfile>();
            QuestionAnswers = new HashSet<QuestionAnswer>();
        }

        [Key]
        [Column("ID")]
        public int Id { get; set; }
        [Required]
        [Column("TitleEN")]
        [StringLength(50)]
        public string TitleEn { get; set; }
        [Required]
        [Column("TitleAR")]
        [StringLength(50)]
        public string TitleAr { get; set; }
        [Required]
        [Column("DescriptionEN")]
        public string DescriptionEn { get; set; }
        [Required]
        [Column("DescriptionAR")]
        public string DescriptionAr { get; set; }
        [StringLength(1000)]
        public string RequirmentsEN { get; set; }
        public bool IsActive { get; set; }
        [Column("FileID")]
        public Guid? FileId { get; set; }
        [Column("ImageID")]
        public Guid? ImageId { get; set; }

       // public decimal? Cost { get; set; }
        //public string PaymentDetails { get; set; }
        public int SeatsCount { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime StartDate { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime EndDate { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime Created { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime Modified { get; set; }
        [Required]
        [StringLength(256)]
        public string CreatedBy { get; set; }
        [Required]
        [StringLength(256)]
        public string ModifiedBy { get; set; }
        [Column("QuestionGroupID")]
        public int? QuestionGroupId { get; set; }
        public int RemainingSeatsCount { get; set; }
        [Column("InitiativeTypeItemID")]
        public int InitiativeTypeItemId { get; set; }
        [Column("CategoryID")]
        public int? CategoryId { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? RegistrationEndDate { get; set; }
        [StringLength(100)]
        public string DisplayLocationTextEn { get; set; }
        [StringLength(100)]
        public string DisplayLocationTextAr { get; set; }
        [StringLength(50)]
        public string Longitude { get; set; }
        [StringLength(50)]
        public string Latitude { get; set; }
        [StringLength(500)]
        public string MapText { get; set; }
        public string CostAR { get; set; }
        public string CostEN { get; set; }
        public string DidYouKnowEN { get; set; }
        public string DidYouKnowAR { get; set; }
        public string EventOrganizerNameEN { get; set; }
        public string EventOrganizerNameAR { get; set; }
        public string EventOrganizerEmail { get; set; }
        public string EventOrganizerPhoneNumber { get; set; }
        public string PaymentDetailsAR { get; set; }
        public string PaymentDetailsEN { get; set; }
        public string QRCode { get; set; }
        public int? RegistrationTypeItemID { get; set; }
        public string ReferenceNumber { get; set; }
        public Guid? MobImageID { get; set; }
        public string RequirmentsAR { get; set; }

        [ForeignKey(nameof(CategoryId))]
        [InverseProperty(nameof(InitiativeCategory.Initiatives))]
        public virtual InitiativeCategory Category { get; set; }
        [ForeignKey(nameof(InitiativeTypeItemId))]
        [InverseProperty(nameof(LookupItem.Initiatives))]
        public virtual LookupItem InitiativeTypeItem { get; set; }
        [ForeignKey(nameof(QuestionGroupId))]
        [InverseProperty("Initiatives")]
        public virtual QuestionGroup QuestionGroup { get; set; }
        [InverseProperty(nameof(BatchInitiative.Initiative))]
        public virtual ICollection<BatchInitiative> BatchInitiatives { get; set; }
        [InverseProperty(nameof(InitiativeProfile.Initiative))]
        public virtual ICollection<InitiativeProfile> InitiativeProfiles { get; set; }
        [InverseProperty(nameof(QuestionAnswer.Initiative))]
        public virtual ICollection<QuestionAnswer> QuestionAnswers { get; set; }
    }
}