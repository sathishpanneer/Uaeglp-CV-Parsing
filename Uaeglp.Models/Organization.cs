// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Uaeglp.Models
{
    [Table("Organization", Schema = "bbsf")]
    public partial class Organization
    {
        public Organization()
        {
            PermissionSets = new HashSet<PermissionSet>();
            Permissions = new HashSet<Permission>();
            Providers = new HashSet<Provider>();
            Templates = new HashSet<Template>();
            Users = new HashSet<User>();
        }

        [Key]
        [Column("ID")]
        public int Id { get; set; }
        [Required]
        [Column("NameEN")]
        [StringLength(100)]
        public string NameEn { get; set; }
        [Required]
        [Column("NameAR")]
        [StringLength(100)]
        public string NameAr { get; set; }
        [Column("LogoFileID")]
        public int? LogoFileId { get; set; }
        [Required]
        [StringLength(2)]
        public string DefaultLanguage { get; set; }
        [Required]
        [StringLength(50)]
        public string DefaultTimeZone { get; set; }
        [StringLength(1024)]
        public string DatabaseConnectionString { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime Created { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime Modified { get; set; }
        [Required]
        [StringLength(256)]
        public string CreatedBy { get; set; }
        [Required]
        [StringLength(256)]
        public string ModifiedBy { get; set; }
        [Required]
        public byte[] RowVersion { get; set; }
        public byte[] License { get; set; }

        [InverseProperty(nameof(PermissionSet.Organization))]
        public virtual ICollection<PermissionSet> PermissionSets { get; set; }
        [InverseProperty(nameof(Permission.Organization))]
        public virtual ICollection<Permission> Permissions { get; set; }
        [InverseProperty(nameof(Provider.Organization))]
        public virtual ICollection<Provider> Providers { get; set; }
        [InverseProperty(nameof(Template.Organization))]
        public virtual ICollection<Template> Templates { get; set; }
        [InverseProperty(nameof(User.Organization))]
        public virtual ICollection<User> Users { get; set; }
    }
}