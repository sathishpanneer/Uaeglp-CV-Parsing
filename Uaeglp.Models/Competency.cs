// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Uaeglp.Models
{
    [Table("Competency")]
    public partial class Competency
    {
        public Competency()
        {
            CompetencyAssessmentTools = new HashSet<CompetencyAssessmentTool>();
            CompetencySubscales = new HashSet<CompetencySubscale>();
            ProfileCompetencyScores = new HashSet<ProfileCompetencyScore>();
            ProfileSubScaleScores = new HashSet<ProfileSubScaleScore>();
            QuestionItems = new HashSet<QuestionItem>();
        }

        [Key]
        [Column("ID")]
        public int Id { get; set; }
        [Required]
        [Column("NameEN")]
        [StringLength(100)]
        public string NameEn { get; set; }
        [Required]
        [Column("NameAR")]
        [StringLength(100)]
        public string NameAr { get; set; }
        [Column("DescriptionEN")]
        [StringLength(300)]
        public string DescriptionEn { get; set; }
        [Column("DescriptionAR")]
        [StringLength(300)]
        public string DescriptionAr { get; set; }
        [Column("PillarID")]
        public int PillarId { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime Created { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime Modified { get; set; }
        [Required]
        [StringLength(256)]
        public string CreatedBy { get; set; }
        [Required]
        [StringLength(256)]
        public string ModifiedBy { get; set; }

        [ForeignKey(nameof(PillarId))]
        [InverseProperty("Competencies")]
        public virtual Pillar Pillar { get; set; }
        [InverseProperty(nameof(CompetencyAssessmentTool.Competency))]
        public virtual ICollection<CompetencyAssessmentTool> CompetencyAssessmentTools { get; set; }
        [InverseProperty(nameof(CompetencySubscale.Competency))]
        public virtual ICollection<CompetencySubscale> CompetencySubscales { get; set; }
        [InverseProperty(nameof(ProfileCompetencyScore.Competency))]
        public virtual ICollection<ProfileCompetencyScore> ProfileCompetencyScores { get; set; }
        [InverseProperty(nameof(ProfileSubScaleScore.Competency))]
        public virtual ICollection<ProfileSubScaleScore> ProfileSubScaleScores { get; set; }
        [InverseProperty(nameof(QuestionItem.Competency))]
        public virtual ICollection<QuestionItem> QuestionItems { get; set; }
    }
}