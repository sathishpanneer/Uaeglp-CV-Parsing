// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Uaeglp.Models
{
    [Table("GlpOrganization")]
    public partial class GlpOrganization
    {
        public GlpOrganization()
        {
            ApplicationAchievements = new HashSet<ApplicationAchievement>();
            ApplicationTrainings = new HashSet<ApplicationTraining>();
            GlpOrganizationItemTypes = new HashSet<GlpOrganizationItemType>();
            ProfileAchievements = new HashSet<ProfileAchievement>();
            ProfileEducations = new HashSet<ProfileEducation>();
            ProfileMemberships = new HashSet<ProfileMembership>();
            ProfileTrainings = new HashSet<ProfileTraining>();
            ProfileWorkExperiences = new HashSet<ProfileWorkExperience>();
        }

        [Key]
        [Column("ID")]
        public int Id { get; set; }
        [Column("OrganizationSectorTypeItemID")]
        public int? OrganizationSectorTypeItemId { get; set; }
        [Column("OrganizationScaleItemID")]
        public int? OrganizationScaleItemId { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime Created { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime Modified { get; set; }
        [Required]
        [StringLength(256)]
        public string CreatedBy { get; set; }
        [Required]
        [StringLength(256)]
        public string ModifiedBy { get; set; }
        [Required]
        [Column("NameEN")]
        [StringLength(300)]
        public string NameEn { get; set; }
        [Required]
        [Column("NameAR")]
        [StringLength(300)]
        public string NameAr { get; set; }
        [Column("OrganizationTypeItemID")]
        public int? OrganizationTypeItemId { get; set; }
        [Column("IsFromTop200QSRank")]
        public bool IsFromTop200Qsrank { get; set; }
        [Column("IsUAEPriority")]
        public bool IsUaepriority { get; set; }
        [Column("OrganizationIndustryItemID")]
        public int? OrganizationIndustryItemId { get; set; }
        [Column("OrganizationEmirateLookupItemID")]
        public int? OrganizationEmirateLookupItemId { get; set; }
        [Column("LogoID")]
        public int? LogoId { get; set; }

        [ForeignKey(nameof(OrganizationEmirateLookupItemId))]
        [InverseProperty(nameof(LookupItem.GlpOrganizationOrganizationEmirateLookupItems))]
        public virtual LookupItem OrganizationEmirateLookupItem { get; set; }
        [ForeignKey(nameof(OrganizationIndustryItemId))]
        [InverseProperty(nameof(LookupItem.GlpOrganizationOrganizationIndustryItems))]
        public virtual LookupItem OrganizationIndustryItem { get; set; }
        [ForeignKey(nameof(OrganizationScaleItemId))]
        [InverseProperty(nameof(LookupItem.GlpOrganizationOrganizationScaleItems))]
        public virtual LookupItem OrganizationScaleItem { get; set; }
        [ForeignKey(nameof(OrganizationSectorTypeItemId))]
        [InverseProperty(nameof(LookupItem.GlpOrganizationOrganizationSectorTypeItems))]
        public virtual LookupItem OrganizationSectorTypeItem { get; set; }
        [ForeignKey(nameof(OrganizationTypeItemId))]
        [InverseProperty(nameof(LookupItem.GlpOrganizationOrganizationTypeItems))]
        public virtual LookupItem OrganizationTypeItem { get; set; }
        [InverseProperty(nameof(ApplicationAchievement.Orgnization))]
        public virtual ICollection<ApplicationAchievement> ApplicationAchievements { get; set; }
        [InverseProperty(nameof(ApplicationTraining.Organization))]
        public virtual ICollection<ApplicationTraining> ApplicationTrainings { get; set; }
        [InverseProperty(nameof(GlpOrganizationItemType.GlpOrganization))]
        public virtual ICollection<GlpOrganizationItemType> GlpOrganizationItemTypes { get; set; }
        [InverseProperty(nameof(ProfileAchievement.Orgnization))]
        public virtual ICollection<ProfileAchievement> ProfileAchievements { get; set; }
        [InverseProperty(nameof(ProfileEducation.Organization))]
        public virtual ICollection<ProfileEducation> ProfileEducations { get; set; }
        [InverseProperty(nameof(ProfileMembership.Organization))]
        public virtual ICollection<ProfileMembership> ProfileMemberships { get; set; }
        [InverseProperty(nameof(ProfileTraining.Organization))]
        public virtual ICollection<ProfileTraining> ProfileTrainings { get; set; }
        [InverseProperty(nameof(ProfileWorkExperience.Organization))]
        public virtual ICollection<ProfileWorkExperience> ProfileWorkExperiences { get; set; }
    }
}