// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Uaeglp.Models
{
    [Table("File", Schema = "bbsf")]
    public partial class File
    {
        public File()
        {
            KnowledgeHubCategories = new HashSet<KnowledgeHubCategory>();
            NetworkGroups = new HashSet<NetworkGroup>();
            ProfileCvfiles = new HashSet<Profile>();
            ProfileFamilyBookFiles = new HashSet<Profile>();
            ProfileLastEducationCertificateFiles = new HashSet<Profile>();
            ProfilePassportFiles = new HashSet<Profile>();
            ProfileUaeidfiles = new HashSet<Profile>();
            ProfileVideoAssessmentAnswerScores = new HashSet<ProfileVideoAssessmentAnswerScore>();
            PublicHolidays = new HashSet<PublicHoliday>();
            Qanswers = new HashSet<Qanswer>();
            QuestionAnswers = new HashSet<QuestionAnswer>();
            QuestionHeads = new HashSet<QuestionHead>();
            QuestionItems = new HashSet<QuestionItem>();
            UserLargeImageFiles = new HashSet<User>();
            UserOriginalImageFiles = new HashSet<User>();
            UserSmallImageFiles = new HashSet<User>();
        }

        [Key]
        [Column("ID")]
        public int Id { get; set; }
        [Column("ID_GUID")]
        public Guid IdGuid { get; set; }
        [Column("CorrelationID")]
        public Guid? CorrelationId { get; set; }
        [Required]
        [StringLength(150)]
        public string Name { get; set; }
        [StringLength(500)]
        public string ExtraParams { get; set; }
        [Required]
        [StringLength(127)]
        public string MimeType { get; set; }
        [Required]
        [StringLength(100)]
        public string ProviderName { get; set; }
        [Column("SizeMB", TypeName = "decimal(6, 3)")]
        public decimal SizeMb { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime Created { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime Modified { get; set; }
        [Required]
        [StringLength(256)]
        public string CreatedBy { get; set; }
        [Required]
        [StringLength(256)]
        public string ModifiedBy { get; set; }
        [Column("FolderID")]
        public int? FolderId { get; set; }

        [ForeignKey(nameof(FolderId))]
        [InverseProperty(nameof(LibraryFolder.Files))]
        public virtual LibraryFolder Folder { get; set; }
        [InverseProperty(nameof(KnowledgeHubCategory.Logo))]
        public virtual ICollection<KnowledgeHubCategory> KnowledgeHubCategories { get; set; }
        [InverseProperty(nameof(NetworkGroup.Logo))]
        public virtual ICollection<NetworkGroup> NetworkGroups { get; set; }
        [InverseProperty(nameof(Profile.Cvfile))]
        public virtual ICollection<Profile> ProfileCvfiles { get; set; }
        [InverseProperty(nameof(Profile.FamilyBookFile))]
        public virtual ICollection<Profile> ProfileFamilyBookFiles { get; set; }
        [InverseProperty(nameof(Profile.LastEducationCertificateFile))]
        public virtual ICollection<Profile> ProfileLastEducationCertificateFiles { get; set; }
        [InverseProperty(nameof(Profile.PassportFile))]
        public virtual ICollection<Profile> ProfilePassportFiles { get; set; }
        [InverseProperty(nameof(Profile.Uaeidfile))]
        public virtual ICollection<Profile> ProfileUaeidfiles { get; set; }
        [InverseProperty(nameof(ProfileVideoAssessmentAnswerScore.Video))]
        public virtual ICollection<ProfileVideoAssessmentAnswerScore> ProfileVideoAssessmentAnswerScores { get; set; }
        [InverseProperty(nameof(PublicHoliday.ImageFile))]
        public virtual ICollection<PublicHoliday> PublicHolidays { get; set; }
        [InverseProperty(nameof(Qanswer.Image))]
        public virtual ICollection<Qanswer> Qanswers { get; set; }
        [InverseProperty(nameof(QuestionAnswer.AnswerFile))]
        public virtual ICollection<QuestionAnswer> QuestionAnswers { get; set; }
        [InverseProperty(nameof(QuestionHead.Image))]
        public virtual ICollection<QuestionHead> QuestionHeads { get; set; }
        [InverseProperty(nameof(QuestionItem.Image))]
        public virtual ICollection<QuestionItem> QuestionItems { get; set; }
        [InverseProperty(nameof(User.LargeImageFile))]
        public virtual ICollection<User> UserLargeImageFiles { get; set; }
        [InverseProperty(nameof(User.OriginalImageFile))]
        public virtual ICollection<User> UserOriginalImageFiles { get; set; }
        [InverseProperty(nameof(User.SmallImageFile))]
        public virtual ICollection<User> UserSmallImageFiles { get; set; }
    }
}